{"version":3,"file":"runtime-dom.global.js","sources":["../../shared/src/index.ts","../../runtime-core/src/createVNode.ts","../../runtime-core/src/apiCreateApp.ts","../../reactivity/src/effect.ts","../../reactivity/src/reactive.ts","../../reactivity/src/computed.ts","../../reactivity/src/ref.ts","../../runtime-core/src/index.ts","../src/nodeOps.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["export function isObject(value: unknown): value is Record<any, any> {\r\n  return typeof value === 'object' && value !== null\r\n}\r\n\r\nexport function isFunction(value): boolean {\r\n  return typeof value === 'function'\r\n}\r\nexport function isString(value) {\r\n  return typeof value === 'string'\r\n}\r\n\r\nexport const enum ShapeFlags {\r\n  ELEMENT = 1, // 元素\r\n  FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件\r\n  STATEFUL_COMPONENT = 1 << 2, // 普通组件\r\n  TEXT_CHILDREN = 1 << 3, // 孩子是文本\r\n  ARRAY_CHILDREN = 1 << 4, // 孩子是数组\r\n  SLOTS_CHILDREN = 1 << 5, // 组件插槽\r\n  TELEPORT = 1 << 6, // teleport组件\r\n  SUSPENSE = 1 << 7, // suspense组件\r\n  COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT \t// 组件\r\n}\r\n/*\r\nlet r = ShapeFlags.ELEMENT | ShapeFlags.FUNCTIONAL_COMPONENT; // r包含元素和函数式组件\r\n// 我们像看r 是不是元素\r\n(r & ShapeFlags.ELEMENT) > 0; // 说明包含元素\r\n(r & ShapeFlags.FUNCTIONAL_COMPONENT) > 0\r\n*/\r\n\r\n\r\n  // 二进制  00000100  位移  | & 是做权限必备的一个操作 \r\n  // | 来组合权限 & 来判断是否包含某个权限\r\n//   001 |  010 => 011  =3    011 & 001 = 001   011 & 010 => 010   011 & 100  -> 000\r\n  // 001\r\n  // 010\r\n  // 100","import { isObject, isString, ShapeFlags } from \"@vue/shared\";\r\nexport function createVNode(type, props, children = null) { // h('div',{},['hellozf','hellozf'])\r\n\r\n    // 虚拟节点就是 用一个对象来描述信息的  \r\n\r\n    // & | \r\n    const shapeFlag = isObject(type) ?\r\n        ShapeFlags.COMPONENT :\r\n        isString(type) ?\r\n            ShapeFlags.ELEMENT :\r\n            0\r\n\r\n    const vnode = { // 跨平台\r\n        __v_isVNode: true,\r\n        type,\r\n        shapeFlag,\r\n        props,\r\n        children,\r\n        key: props && props.key, // key值\r\n        component: null, // 如果是组件的虚拟节点要保存组件的实例\r\n        el: null, // 虚拟节点对应的真实节点\r\n    }\r\n    if(children){\r\n        // 告诉此节点 是什么样的儿子 \r\n        // 稍后渲染虚拟节点的时候 可以判断儿子是数组 就循环渲染\r\n        vnode.shapeFlag =  vnode.shapeFlag | (isString(children) ? ShapeFlags.TEXT_CHILDREN:ShapeFlags.ARRAY_CHILDREN)\r\n    }\r\n    // vnode 就可以描述出来 当前他是一个什么样的节点 儿子是什么样的\r\n    return vnode; // createApp(App)\r\n}","import { createVNode } from \"./createVNode\";\r\n\r\nexport function createAppAPI(render) {\r\n    return (rootComponent, rootProps) => {\r\n        let isMounted = false;\r\n        const app = {\r\n            mount(container) {\r\n                // 1.创造组件虚拟节点 \r\n                let vnode = createVNode(rootComponent, rootProps); // h函数\r\n                // 2.挂载的核心就是根据传入的组件对象 创造一个组件的虚拟节点 ，在将这个虚拟节点渲染到容器中\r\n                render(vnode, container)\r\n                if (!isMounted) {\r\n                    isMounted = true;\r\n                }\r\n            }\r\n        }\r\n        return app\r\n    }\r\n}\r\n","// effect1(()=>{\r\n//     state.name\r\n//     effect2(()=>{\r\n//         state.age;\r\n//     })\r\n//     state.address\r\n// })\r\n\r\n// // effectStack = [effect1] activeEffect = effect1\r\n// // effect1 -> name\r\n// // effect2 -> age\r\n// // effect1 -> address\r\n\r\n\r\nlet effectStack = []; // 目的就是为了能保证我们effect执行的时候 可以存储正确的关系\r\nlet activeEffect;\r\n\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    for (let dep of deps) {\r\n        // set 删除effect 让属性 删除掉对应的effect   name = []\r\n        dep.delete(effect); // 让属性对应的effect移除掉，这样属性更新的时候 就不会触发这个effect重新执行了\r\n    }\r\n}\r\n// 属性变化 触发的是 dep -> effect\r\n// effect.deps = [] 和属性是没关系的\r\nexport class ReactiveEffect {\r\n    active = true; // this.active = true;\r\n    deps = []; // 让effect 记录他依赖了哪些属性 ， 同时要记录当前属性依赖了哪个effect\r\n    constructor(public fn, public scheduler?) { // this.fn = fn;\r\n\r\n    }\r\n    run() { // 调用run的时候会让fn执行\r\n        if (!this.active) { // 稍后如果非激活状态 调用run方法 默认会执行fn函数\r\n            return this.fn();\r\n        }\r\n        if (!effectStack.includes(this)) { // 屏蔽同一个effect会多次执行\r\n            try {\r\n                effectStack.push(activeEffect = this);\r\n                return this.fn(); // 取值  new Proxy 会执行get方法  (依赖收集)\r\n            } finally {\r\n                effectStack.pop(); // 删除最后一个\r\n                activeEffect = effectStack[effectStack.length - 1]\r\n            }\r\n        }\r\n    }\r\n    stop() { // 让effect 和 dep 取消关联 dep上面存储的effect移除掉即可\r\n        if (this.active) {\r\n            cleanupEffect(this)\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\n// obj name :[effect]\r\n//     age : [effect]\r\n// {对象：{属性 ： [effect,effect]}  } \r\nexport function isTracking() {\r\n    return activeEffect !== undefined\r\n}\r\nconst targetMap = new WeakMap();\r\nexport function track(target, key) { // 一个属性对应多个effect， 一个effect中依赖了多个属性 =》 多对多\r\n    // 是只要取值我就要收集吗？\r\n    if (!isTracking()) { // 如果这个属性 不依赖于effect直接跳出即可\r\n        return\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map())); // {对象：map{}}\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));// {对象：map{name:set[]}}\r\n    }\r\n    trackEffects(dep);\r\n\r\n}\r\nexport function trackEffects(dep) {\r\n    let shouldTrack = !dep.has(activeEffect); // 看一下这个属性有没有存过这个effect\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect); // // {对象：map{name:set[effect,effect]}}\r\n        activeEffect.deps.push(dep); // 稍后用到\r\n    } // { 对象：{name:set,age:set}\r\n\r\n}\r\nexport function trigger(target, key) {\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) return;// 属性修改的属性 根本没有依赖任何的effect\r\n    let deps = []; // [set ,set ]\r\n    if (key !== undefined) {\r\n        deps.push(depsMap.get(key));\r\n    }\r\n    let effects = [];\r\n    for (const dep of deps) {\r\n        effects.push(...dep)\r\n    }\r\n    triggerEffects(effects);\r\n}\r\nexport function triggerEffects(dep) {\r\n    for (const effect of dep) { // 如果当前effect执行 和 要执行的effect是同一个，不要执行了 防止循环\r\n        if (effect !== activeEffect) {\r\n            if (effect.scheduler) {\r\n                return effect.scheduler()\r\n            }\r\n            effect.run(); // 执行effect\r\n        }\r\n    }\r\n}\r\nexport function effect(fn) {\r\n    const _effect = new ReactiveEffect(fn);\r\n    _effect.run(); // 会默认让fn执行一次\r\n    let runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect; // 给runner添加一个effect实现 就是 effect实例\r\n    return runner;\r\n}\r\n\r\n// vue3 的响应式原理  取值时 收集对应的effect， 改值时找到对应的effect执行","import { isObject } from \"@vue/shared\"\r\nimport { track, trigger } from \"./effect\";\r\n\r\n\r\nconst enum ReactiveFlags {\r\n    IS_REACTIVE = '__v_isReactive'\r\n}\r\nconst mutableHandlers: ProxyHandler<Record<any, any>> = {\r\n    get(target, key, recevier) { // 代理对象的本身\r\n        if (key === ReactiveFlags.IS_REACTIVE) {\r\n            return true;\r\n        }\r\n        track(target,key);\r\n        // 这里取值了， 可以收集他在哪个effect中\r\n        const res = Reflect.get(target, key, recevier); // target[key]\r\n        return res;\r\n    },\r\n    set(target, key, value, recevier) {\r\n\r\n        let oldValue = (target as any)[key]\r\n        // 如果改变值了， 可以在这里触发effect更新\r\n        const res = Reflect.set(target, key, value, recevier); // target[key] = value\r\n\r\n        if(oldValue !== value){ // 值不发生变化 effect不需要重新执行\r\n            trigger(target,key); // 找属性对应的effect让她重新执行\r\n        }\r\n        return res;\r\n    }\r\n}\r\n// map和weakMap的区别\r\nconst reactiveMap = new WeakMap(); // weakmap 弱引用   key必须是对象，如果key没有被引用可以被自动销毁\r\n\r\nfunction createReactiveObject(target: object) { \r\n    // 先默认认为这个target已经是代理过的属性了\r\n    if ((target as any)[ReactiveFlags.IS_REACTIVE]) {\r\n        return target\r\n    }\r\n    // reactiveApi 只针对对象才可以 \r\n    if (!isObject(target)) {\r\n        return target\r\n    }\r\n    const exisitingProxy = reactiveMap.get(target); // 如果缓存中有 直接使用上次代理的结果\r\n    if (exisitingProxy) {\r\n        return exisitingProxy\r\n    }\r\n    const proxy = new Proxy(target, mutableHandlers); // 当用户获取属性 或者更改属性的时候 我能劫持到\r\n    reactiveMap.set(target, proxy); // 将原对象和生成的代理对象 做一个映射表\r\n\r\n    return proxy; // 返回代理\r\n}\r\n\r\nexport function reactive(target: object) {\r\n    return createReactiveObject(target)\r\n}\r\nexport function toReactive(value){\r\n    return isObject(value) ? reactive(value) : value\r\n}\r\n\r\n// readonly shallowReactive shallowReadnly \r\n// export function readonly(){\r\n// }\r\n// export function shallowReactive(){\r\n// }\r\n// export function shallowReadnly(){\r\n// }\r\n","import { isFunction } from \"@vue/shared\";\r\nimport { isTracking, ReactiveEffect, trackEffects, triggerEffects } from \"./effect\";\r\n\r\n\r\nclass ComputedRefImpl {\r\n    public dep; // this.dep = undefined;\r\n    public _dirty = true; // this._dirty = true;\r\n    public __v_isRef = true;\r\n    public effect; // 计算属性是依赖于effect的\r\n    public _value;\r\n    constructor(getter, public setter) { // 只有调用computed()才执行一次\r\n        // 这里将计算属性包成一个effect\r\n        // 这里 我给计算属性变成了effect ，那么计算属性中的属性会收集这个effect\r\n        this.effect = new ReactiveEffect(getter,()=>{\r\n            // 稍后计算属性依赖的值变化 不要重新执行计算属性的effect，而是调用此函数\r\n            if(!this._dirty){\r\n                this._dirty = true;\r\n                triggerEffects(this.dep )\r\n            }\r\n        });\r\n    }\r\n    get value() { // 取值时会走get方法\r\n        if (isTracking()) { // 是否是在effect中取值的\r\n            trackEffects(this.dep || (this.dep = new Set))\r\n        }\r\n        if (this._dirty) {\r\n            // 将结果缓存到this._value 这样就不用每次都run了\r\n            this._value = this.effect.run();\r\n            this._dirty = false;\r\n        }\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this.setter(newValue); // 如果修改计算属性的值 就触发你自己的set方法\r\n    }\r\n}\r\nexport function computed(getterOrOptions) {\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    let getter;\r\n    let setter;\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = () => { }\r\n    } else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n\r\n    return new ComputedRefImpl(getter, setter)\r\n}","import { isTracking, trackEffects, triggerEffects } from \"./effect\";\r\nimport { toReactive } from \"./reactive\";\r\n\r\nclass RefImpl{\r\n    public dep;\r\n    public __v_isRef;\r\n    public _value;\r\n    constructor(public _rawValue){ // 原来的值\r\n        // _rawValue如果用户传进来的值 是一个对象 我需要将对象转化成响应式\r\n        this._value = toReactive(_rawValue)\r\n    }\r\n\r\n  \r\n    // 类的属性访问器 最终会变成deifneProperty\r\n    get value(){ // 取值的时候进行依赖收集\r\n        if(isTracking()){\r\n            trackEffects(this.dep || (this.dep = new Set()));\r\n            console.log(this.dep)\r\n        }\r\n        return this._value;\r\n    }\r\n    set value(newValue){ // 设置的时候触发更新\r\n        if(newValue !== this._rawValue){\r\n            // 先看一下之前之后是否一样\r\n            this._rawValue = newValue;\r\n            this._value =  toReactive(newValue);\r\n            triggerEffects(this.dep);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createRef(value){\r\n\r\n    return new RefImpl(value);\r\n}\r\n\r\n\r\nexport function ref(value){\r\n    return createRef(value);\r\n}\r\n\r\n// export function shallowRef(value){\r\n //   return createRef(value,true);\r\n// }\r\n\r\n// reactive readonly ","import { ShapeFlags } from '@vue/shared'\r\nimport { createAppAPI } from './apiCreateApp'\r\n\r\nexport * from '@vue/reactivity'\r\n\r\n\r\n// runtime-core  根平台无关的运行时  \r\n\r\n\r\n\r\nexport function createRenderer(renderOptions) { // runtime-core   renderOptionsDOMAPI -> rootComponent -> rootProps -> container\r\n    const mountComponent = (initialVNode,container) =>{ // 组件的挂载流程\r\n        // 根据组件的虚拟节点 创造一个真实节点 ， 渲染到容器中\r\n        console.log(initialVNode,container)\r\n    }\r\n    const processComponent = (n1,n2,container) =>{\r\n        if(n1 == null){\r\n            // 组件的初始化\r\n            mountComponent(n2,container);\r\n        }else{\r\n            // 组件的更新\r\n        }\r\n    }\r\n    const patch = (n1, n2, container) => {\r\n        if(n1 == n2) return ;\r\n        const {shapeFlag} = n2; // createApp(组件)\r\n        if(shapeFlag & ShapeFlags.COMPONENT){\r\n            processComponent(n1, n2, container);\r\n        }\r\n\r\n    }   \r\n\r\n    const render = (vnode, container) => { // 将虚拟节点 转化成真实节点渲染到容器中\r\n        // 后续还有更新 patch  包含初次渲染 还包含更新\r\n        patch(null, vnode, container);// 后续更新 prevNode nextNode container\r\n    }\r\n    // \r\n    return {\r\n        createApp: createAppAPI(render), // 创建一个api createApp\r\n        render\r\n    }\r\n}","export const nodeOps = {\r\n    insert: (child, parent, anchor = null) => { // 插入有追加的功能\r\n        parent.insertBefore(child, anchor); // parent.appendChild(child)\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: tag => document.createElement(tag),\r\n    createText: text => document.createTextNode(text),\r\n    setElementText: (el, text) => el.textContent = text,\r\n    setText: (node, text) => node.nodeValue = text,\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => document.querySelector(selector)\r\n}\r\n\r\n\r\n// runtime-dom 提供 节点操作的api -> 传递给 runtime-core ","\r\n\r\n// 需要比对属性 diff算法    属性比对前后值\r\nfunction patchClass(el, value) {\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    } else {\r\n        el.className = value;\r\n    }\r\n}\r\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style; // 操作的是样式\r\n    // 最新的肯定要全部加到元素上\r\n    for (let key in next) {\r\n        style[key] = next[key];\r\n    }\r\n    // 新的没有 但是老的有这个属性, 将老的移除掉\r\n    if (prev) {\r\n        for (let key in prev) {\r\n            if (next[key] == null) {\r\n                style[key] = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction createInvoker(value) {\r\n    const invoker = (e) => { // 每次事件触发调用的都是invoker \r\n        invoker.value(e)\r\n    }\r\n    invoker.value = value; // 存储这个变量, 后续想换绑 可以直接更新value值\r\n    return invoker\r\n}\r\nfunction patchEvent(el, key, nextValue) {\r\n    // vei  vue event invoker  缓存绑定的事件 \r\n    const invokers = el._vei || (el._vei = {}); // 在元素上绑定一个自定义属性 用来记录绑定的事件\r\n    let exisitingInvoker = invokers[key]; // 先看一下有没有绑定过这个事件\r\n    if (exisitingInvoker && nextValue) { // 换绑逻辑\r\n        exisitingInvoker.value = nextValue\r\n    } else {\r\n        const name = key.slice(2).toLowerCase(); // eventName\r\n        if (nextValue) {\r\n            const invoker = invokers[key] = createInvoker(nextValue); // 返回一个引用\r\n            el.addEventListener(name, invoker);  // 正规的时间 onClick =(e)=>{}\r\n        } else if (exisitingInvoker) {\r\n            // 如果下一个值没有 需要删除\r\n            el.removeEventListener(name, exisitingInvoker);\r\n            invokers[key] = undefined; // 解绑了\r\n        }\r\n        // else{\r\n        //     // 压根没有绑定过 事件就不需要删除了\r\n        // }\r\n    }\r\n}\r\nfunction patchAttr(el, key, value) {\r\n    if (value == null) {\r\n        el.removeAttribute(key)\r\n    } else {\r\n        el.setAttribute(key, value)\r\n    }\r\n}\r\nexport const patchProp = (el, key, prevValue, nextValue) => {\r\n    if (key === 'class') { // 类名 \r\n        patchClass(el, nextValue); // \r\n    } else if (key === 'style') { // 样式\r\n        patchStyle(el, prevValue, nextValue);\r\n    } else if (/^on[^a-z]/.test(key)) { // onXxx\r\n        // 如果有事件 addEventListener  如果没事件 应该用removeListener\r\n        patchEvent(el, key, nextValue);\r\n        // 绑定一个 换帮了一个  在换绑一个\r\n    } else {\r\n        // 其他属性 setAttribute\r\n        patchAttr(el, key, nextValue);\r\n    }\r\n}","\r\n// 需要涵盖我们的 dom操作的api 属性操作的api  ， 将这些api 传入到 我们的runtime-core中\r\n\r\n// runtime-core 在操作中不需要依赖于平台代码 （平台代码是被传入的）\r\n\r\n\r\n// 我们在渲染页面的时候 需要节点操作的一列方法\r\n\r\nimport { createRenderer } from '@vue/runtime-core';\r\nimport { nodeOps } from './nodeOps';\r\nimport { patchProp } from './patchProp';\r\n\r\nconst renderOptions = Object.assign(nodeOps, { patchProp }); // 包含所需要的所有api\r\n\r\n\r\n// 实现将renderOptions 传入到core中\r\n// runtime-dom  在这层 对我们浏览器的操作做了一些\r\n\r\nexport const createApp = (component, rootProps = null) => {\r\n    // 需要创建一个渲染器\r\n    const { createApp } = createRenderer(renderOptions); // runtime-core中的方法\r\n    let app = createApp(component, rootProps);\r\n    let { mount } = app; // 获取core中mount\r\n    app.mount = function (container) {  // 在重写mount\r\n        container = nodeOps.querySelector(container);\r\n        container.innerHTML = '';\r\n        mount(container); // 处理节点后传入到mount中\r\n    }\r\n    return app;\r\n}\r\n\r\nexport const createSSRApp = () =>{ \r\n\r\n}\r\n\r\n// ..\r\n\r\n// 12月12日班  周三周五晚 8-10  周日全天  直播课5个月 webpack react vue node\r\n\r\nexport * from '@vue/runtime-core'; // 导出这个模块中的所有代码  es6 模块规范"],"names":[],"mappings":"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"}